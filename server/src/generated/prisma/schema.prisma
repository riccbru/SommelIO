generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int        @id @default(autoincrement())
  uid           String     @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username      String?    @unique
  full_name     String?
  birthdate     DateTime?  @db.Date
  email         String?    @unique
  password_hash String?
  admin         Boolean?   @default(false)
  premium       Boolean?   @default(false)
  google_id     String?    @unique
  facebook_id   String?    @unique
  apple_id      String?    @unique
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?  @default(now()) @db.Timestamptz(6)
  tastings      tastings[]
}

model wine_categories {
  id                         Int                          @id @default(autoincrement())
  code                       String                       @unique
  tastings                   tastings[]
  wine_category_translations wine_category_translations[]
}

model wine_category_translations {
  id              Int              @id @default(autoincrement())
  category_id     Int?
  language_code   String
  name            String
  wine_categories wine_categories? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([category_id, language_code])
}

model tastings {
  id                  Int             @id @default(autoincrement())
  tid                 String          @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  uid                 String          @db.Uuid
  full_name           String?
  wine_category_id    Int
  wine_denomination   String
  alcohol_content     Decimal         @db.Decimal(4, 2)
  vintage             Int
  wine_temperature    Decimal         @db.Decimal(4, 1)
  ambient_temperature Decimal         @db.Decimal(4, 1)
  tasting_date        DateTime        @db.Date
  tasting_time        DateTime        @db.Time(6)
  tasting_location    String
  created_at          DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?       @default(now()) @db.Timestamptz(6)
  users               users           @relation(fields: [uid], references: [uid], onDelete: Cascade, onUpdate: NoAction)
  wine_categories     wine_categories @relation(fields: [wine_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
